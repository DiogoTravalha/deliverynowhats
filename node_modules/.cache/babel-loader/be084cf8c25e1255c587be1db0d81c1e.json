{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cardapio2021\\\\src\\\\Components\\\\Home\\\\Product\\\\Products.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { GlobalContext } from '../../../GlobalContext';\nimport useMedia from '../../../Hooks/useMedia';\nimport styles from './Products.module.css';\nimport ProductItem from './ProductItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Products = () => {\n  _s();\n\n  const {\n    getProducts,\n    listProducts,\n    addCart,\n    cart\n  } = React.useContext(GlobalContext);\n  const {\n    product\n  } = useParams(); //const mobile = useMedia('(max-width: 480px)');\n\n  React.useEffect(() => {\n    product && getProducts(product);\n  }, [product]);\n\n  function handleClick(product) {\n    var ids = cart.map(item => item.id);\n    var foundIds = product.id.s.filter(x => ids.indexOf(x) !== -1);\n    console.log(foundIds);\n    console.log(product.id);\n    addCart(product);\n    /*\n    if you want to change the way the product is added\n    to the cart in the version below, you can use this logic:\n    if (mobile) {\n        //do something different\n      } else {\n        addCart(product) //use the default function\n      }\n    */\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.products,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.title,\n        children: product ? product : 'Burguers'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.areaProducts,\n        children: listProducts.map(product => /*#__PURE__*/_jsxDEV(ProductItem, {\n          inputCart: handleClick,\n          item: product\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Products, \"cEhOPUbe2Nb7fFy0NTWNCJgfVVE=\", false, function () {\n  return [useParams];\n});\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["D:/Cardapio2021/src/Components/Home/Product/Products.js"],"names":["React","useParams","GlobalContext","useMedia","styles","ProductItem","Products","getProducts","listProducts","addCart","cart","useContext","product","useEffect","handleClick","ids","map","item","id","foundIds","s","filter","x","indexOf","console","log","products","container","title","areaProducts"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,YAAf;AAA6BC,IAAAA,OAA7B;AAAsCC,IAAAA;AAAtC,MACJV,KAAK,CAACW,UAAN,CAAiBT,aAAjB,CADF;AAEA,QAAM;AAAEU,IAAAA;AAAF,MAAcX,SAAS,EAA7B,CAHqB,CAIrB;;AAEAD,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpBD,IAAAA,OAAO,IAAIL,WAAW,CAACK,OAAD,CAAtB;AACD,GAFD,EAEG,CAACA,OAAD,CAFH;;AAIA,WAASE,WAAT,CAAqBF,OAArB,EAA8B;AAC5B,QAAIG,GAAG,GAAGL,IAAI,CAACM,GAAL,CAAUC,IAAD,IAAUA,IAAI,CAACC,EAAxB,CAAV;AAEA,QAAIC,QAAQ,GAAGP,OAAO,CAACM,EAAR,CAAWE,CAAX,CAAaC,MAAb,CAAqBC,CAAD,IAAOP,GAAG,CAACQ,OAAJ,CAAYD,CAAZ,MAAmB,CAAC,CAA/C,CAAf;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYb,OAAO,CAACM,EAApB;AAEAT,IAAAA,OAAO,CAACG,OAAD,CAAP;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG;;AAED,sBACE;AAAK,IAAA,SAAS,EAAER,MAAM,CAACsB,QAAvB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEtB,MAAM,CAACuB,SAAvB;AAAA,8BACE;AAAI,QAAA,SAAS,EAAEvB,MAAM,CAACwB,KAAtB;AAAA,kBAA8BhB,OAAO,GAAGA,OAAH,GAAa;AAAlD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAER,MAAM,CAACyB,YAAvB;AAAA,kBACGrB,YAAY,CAACQ,GAAb,CAAkBJ,OAAD,iBAChB,QAAC,WAAD;AACE,UAAA,SAAS,EAAEE,WADb;AAGE,UAAA,IAAI,EAAEF;AAHR,WAEOA,OAAO,CAACM,EAFf;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA9CD;;GAAMZ,Q;UAGgBL,S;;;KAHhBK,Q;AAgDN,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { GlobalContext } from '../../../GlobalContext'\nimport useMedia from '../../../Hooks/useMedia'\nimport styles from './Products.module.css'\nimport ProductItem from './ProductItem'\n\nconst Products = () => {\n  const { getProducts, listProducts, addCart, cart } =\n    React.useContext(GlobalContext)\n  const { product } = useParams()\n  //const mobile = useMedia('(max-width: 480px)');\n\n  React.useEffect(() => {\n    product && getProducts(product)\n  }, [product])\n\n  function handleClick(product) {\n    var ids = cart.map((item) => item.id)\n\n    var foundIds = product.id.s.filter((x) => ids.indexOf(x) !== -1)\n    console.log(foundIds)\n    console.log(product.id)\n\n    addCart(product)\n\n    /*\n    if you want to change the way the product is added\n    to the cart in the version below, you can use this logic:\n    if (mobile) {\n        //do something different\n      } else {\n        addCart(product) //use the default function\n      }\n    */\n  }\n\n  return (\n    <div className={styles.products}>\n      <div className={styles.container}>\n        <h2 className={styles.title}>{product ? product : 'Burguers'}</h2>\n        <div className={styles.areaProducts}>\n          {listProducts.map((product) => (\n            <ProductItem\n              inputCart={handleClick}\n              key={product.id}\n              item={product}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Products\n"]},"metadata":{},"sourceType":"module"}