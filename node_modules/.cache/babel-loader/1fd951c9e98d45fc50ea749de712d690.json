{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cardapio2021\\\\src\\\\GlobalContext.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport firebase from './Components/Firebase/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GlobalContext = /*#__PURE__*/React.createContext();\nexport const GlobalStorage = ({\n  children\n}) => {\n  _s();\n\n  const [data, setData] = React.useState([]);\n  const [listProducts, setListProducts] = React.useState([]);\n  const [openCart, setOpenCart] = React.useState(false);\n  const [openObs, setOpenObs] = React.useState(false);\n  const [obs, setObs] = React.useState(null);\n  const [idObs, setIdObs] = React.useState(null);\n  const [cart, setCart] = React.useState([]);\n  const [total, setTotal] = React.useState(0);\n  const [user, setUser] = React.useState(null);\n  const [typeBuy, setTypeBuy] = React.useState('');\n  const [cep, setCep] = React.useState('');\n  const [number, setNumber] = React.useState('');\n  const [complement, setComplement] = React.useState('');\n  const [typePayment, setTypePayment] = React.useState('');\n  const [address, setAddress] = React.useState(null);\n  const [order, setOrder] = React.useState('');\n  const [categoria, setCategoria] = React.useState([]);\n\n  function addCart(item) {\n    // item.quantity = 1\n    // item.currentPrice = item.price\n    // item.isSelected = true\n    // setCart((oldArray) => [...oldArray, item])\n    console.log(categoria);\n  } // add note to cart item\n\n\n  function addObs(id) {\n    let indexItem = cart.map(e => e.id).indexOf(id);\n    let updatedCart = [...cart];\n    updatedCart[indexItem].obs = obs;\n    setCart(updatedCart);\n  }\n\n  function incrementItem(item) {\n    let indexItem = cart.map(e => e.id).indexOf(item.id);\n    let updatedCart = [...cart];\n    updatedCart[indexItem].quantity = updatedCart[indexItem].quantity + 1;\n    updatedCart[indexItem].currentPrice = updatedCart[indexItem].currentPrice + updatedCart[indexItem].price;\n    setCart(updatedCart);\n  }\n\n  function decrementItem(item) {\n    let indexItem = cart.map(e => e.id).indexOf(item.id);\n    let updatedCart = [...cart];\n    updatedCart[indexItem].quantity = updatedCart[indexItem].quantity - 1;\n    updatedCart[indexItem].currentPrice = updatedCart[indexItem].currentPrice - updatedCart[indexItem].price;\n\n    if (updatedCart[indexItem].quantity === 0) {\n      updatedCart[indexItem].isSelected = false;\n      updatedCart.splice(indexItem, 1);\n      setCart(updatedCart);\n    }\n\n    setCart(updatedCart);\n  }\n\n  const getProducts = async category => {\n    // const response = await fetch(\n    //   `https://my-json-server.typicode.com/danielmafra/api/${category}`\n    // )\n    // const json = await response.json()\n    // setData(json)\n    const firestoreRef = firebase.firestore().collection('Loja').doc('deliverynowhats').collection('Produtos').doc(category).collection('Itens');\n    const unsub = firestoreRef.onSnapshot(getCollection);\n    return () => {\n      unsub();\n    };\n  };\n\n  React.useEffect(() => {\n    firebase.firestore().collection('Loja').doc('deliverynowhats').collection('Produtos').get().then(querySnapshot => {\n      const array = [];\n      querySnapshot.forEach(doc => {\n        array.push({\n          doc\n        });\n        setCategoria(array);\n      });\n    });\n  }, []);\n\n  function getCollection(querySnapshot) {\n    const array = [];\n    querySnapshot.forEach(res => {\n      const {\n        title,\n        price,\n        img,\n        offer,\n        description,\n        id\n      } = res.data();\n      array.push({\n        doc: res.id,\n        id,\n        title,\n        price,\n        description,\n        img,\n        offer\n      });\n      const novo = array.map(item => ({\n        id: item.id,\n        title: item.title,\n        img: item.img,\n        price: item.price,\n        description: item.description,\n        offer: item.offer\n      }));\n      setData(novo);\n    });\n  }\n\n  async function getCep(cep) {\n    const response = await fetch(`https://viacep.com.br/ws/${cep}/json/`);\n    const json = await response.json();\n    setAddress({\n      rua: json.logradouro,\n      cidade: json.localidade,\n      bairro: json.bairro,\n      uf: json.uf,\n      cep: json.cep\n    });\n  } // wait for the CEP to be filled in with 8 digits to make the request\n\n\n  React.useEffect(() => {\n    if (cep.length >= 8) {\n      getCep(cep);\n    }\n  }, [cep]); // watch the cart changes to calculate the total price.\n\n  React.useEffect(() => {\n    if (cart.length > 0) {\n      const prices = cart.map(item => item.currentPrice);\n      setTotal(prices.reduce((a, b) => a + b));\n    }\n  }, [cart]); // save the address in localStorage after finalizing the order\n\n  React.useEffect(() => {\n    if (typeBuy === 'delivery') {\n      window.localStorage.setItem('address', JSON.stringify(order.address));\n    }\n  }, [order]);\n  React.useEffect(() => {\n    setListProducts(data);\n  }, [data]); // loads product list and default localStorage address\n\n  React.useEffect(() => {\n    async function loadData() {\n      const response = await fetch('https://my-json-server.typicode.com/danielmafra/api/Bebidas');\n      const json = await response.json();\n      setData(json);\n    }\n\n    loadData();\n    const addressDefault = window.localStorage.getItem('address');\n\n    if (addressDefault !== '' && addressDefault !== null && addressDefault !== undefined) {\n      setUser(JSON.parse(addressDefault));\n    } else {\n      setUser(null);\n    }\n  }, []);\n\n  function getCollection1(querySnapshot) {\n    const array = [];\n    querySnapshot.forEach(res => {\n      console.log(res.data()); // array.push({\n      //   doc: res.id,\n      //   id,\n      //   title,\n      //   price,\n      //   description,\n      //   img,\n      //   offer,\n      // })\n      // const novo = array.map((item) => ({\n      //   id: item.id,\n      //   title: item.title,\n      //   img: item.img,\n      //   price: item.price,\n      //   description: item.description,\n      //   offer: item.offer,\n      // }))\n      // setData(novo)\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      getProducts,\n      listProducts,\n      addCart,\n      cart,\n      total,\n      incrementItem,\n      decrementItem,\n      user,\n      setUser,\n      typeBuy,\n      setTypeBuy,\n      cep,\n      setCep,\n      number,\n      setNumber,\n      complement,\n      setComplement,\n      typePayment,\n      setTypePayment,\n      address,\n      setAddress,\n      order,\n      setOrder,\n      openCart,\n      setOpenCart,\n      openObs,\n      setOpenObs,\n      idObs,\n      setIdObs,\n      obs,\n      setObs,\n      addObs\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GlobalStorage, \"qWYkQ0Dtr2F9KQBkNQNA1bvVz9Y=\");\n\n_c = GlobalStorage;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalStorage\");","map":{"version":3,"sources":["D:/Cardapio2021/src/GlobalContext.js"],"names":["React","firebase","GlobalContext","createContext","GlobalStorage","children","data","setData","useState","listProducts","setListProducts","openCart","setOpenCart","openObs","setOpenObs","obs","setObs","idObs","setIdObs","cart","setCart","total","setTotal","user","setUser","typeBuy","setTypeBuy","cep","setCep","number","setNumber","complement","setComplement","typePayment","setTypePayment","address","setAddress","order","setOrder","categoria","setCategoria","addCart","item","console","log","addObs","id","indexItem","map","e","indexOf","updatedCart","incrementItem","quantity","currentPrice","price","decrementItem","isSelected","splice","getProducts","category","firestoreRef","firestore","collection","doc","unsub","onSnapshot","getCollection","useEffect","get","then","querySnapshot","array","forEach","push","res","title","img","offer","description","novo","getCep","response","fetch","json","rua","logradouro","cidade","localidade","bairro","uf","length","prices","reduce","a","b","window","localStorage","setItem","JSON","stringify","loadData","addressDefault","getItem","undefined","parse","getCollection1"],"mappings":"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","sourcesContent":["import React from 'react'\nimport firebase from './Components/Firebase/firebase'\n\nexport const GlobalContext = React.createContext()\n\nexport const GlobalStorage = ({ children }) => {\n  const [data, setData] = React.useState([])\n  const [listProducts, setListProducts] = React.useState([])\n  const [openCart, setOpenCart] = React.useState(false)\n  const [openObs, setOpenObs] = React.useState(false)\n  const [obs, setObs] = React.useState(null)\n  const [idObs, setIdObs] = React.useState(null)\n  const [cart, setCart] = React.useState([])\n  const [total, setTotal] = React.useState(0)\n  const [user, setUser] = React.useState(null)\n  const [typeBuy, setTypeBuy] = React.useState('')\n  const [cep, setCep] = React.useState('')\n  const [number, setNumber] = React.useState('')\n  const [complement, setComplement] = React.useState('')\n  const [typePayment, setTypePayment] = React.useState('')\n  const [address, setAddress] = React.useState(null)\n  const [order, setOrder] = React.useState('')\n  const [categoria, setCategoria] = React.useState([])\n\n  function addCart(item) {\n    // item.quantity = 1\n    // item.currentPrice = item.price\n    // item.isSelected = true\n    // setCart((oldArray) => [...oldArray, item])\n    console.log(categoria)\n  }\n\n  // add note to cart item\n  function addObs(id) {\n    let indexItem = cart.map((e) => e.id).indexOf(id)\n    let updatedCart = [...cart]\n    updatedCart[indexItem].obs = obs\n    setCart(updatedCart)\n  }\n\n  function incrementItem(item) {\n    let indexItem = cart.map((e) => e.id).indexOf(item.id)\n    let updatedCart = [...cart]\n    updatedCart[indexItem].quantity = updatedCart[indexItem].quantity + 1\n    updatedCart[indexItem].currentPrice =\n      updatedCart[indexItem].currentPrice + updatedCart[indexItem].price\n    setCart(updatedCart)\n  }\n\n  function decrementItem(item) {\n    let indexItem = cart.map((e) => e.id).indexOf(item.id)\n    let updatedCart = [...cart]\n    updatedCart[indexItem].quantity = updatedCart[indexItem].quantity - 1\n    updatedCart[indexItem].currentPrice =\n      updatedCart[indexItem].currentPrice - updatedCart[indexItem].price\n    if (updatedCart[indexItem].quantity === 0) {\n      updatedCart[indexItem].isSelected = false\n      updatedCart.splice(indexItem, 1)\n      setCart(updatedCart)\n    }\n    setCart(updatedCart)\n  }\n\n  const getProducts = async (category) => {\n    // const response = await fetch(\n    //   `https://my-json-server.typicode.com/danielmafra/api/${category}`\n    // )\n    // const json = await response.json()\n    // setData(json)\n    const firestoreRef = firebase\n      .firestore()\n      .collection('Loja')\n      .doc('deliverynowhats')\n      .collection('Produtos')\n      .doc(category)\n      .collection('Itens')\n    const unsub = firestoreRef.onSnapshot(getCollection)\n    return () => {\n      unsub()\n    }\n  }\n\n  React.useEffect(() => {\n    firebase\n      .firestore()\n      .collection('Loja')\n      .doc('deliverynowhats')\n      .collection('Produtos')\n      .get()\n      .then((querySnapshot) => {\n        const array = []\n        querySnapshot.forEach((doc) => {\n          array.push({\n            doc,\n          })\n          setCategoria(array)\n        })\n      })\n  }, [])\n\n  function getCollection(querySnapshot) {\n    const array = []\n    querySnapshot.forEach((res) => {\n      const { title, price, img, offer, description, id } = res.data()\n      array.push({\n        doc: res.id,\n        id,\n        title,\n        price,\n        description,\n        img,\n        offer,\n      })\n      const novo = array.map((item) => ({\n        id: item.id,\n        title: item.title,\n        img: item.img,\n        price: item.price,\n        description: item.description,\n        offer: item.offer,\n      }))\n      setData(novo)\n    })\n  }\n\n  async function getCep(cep) {\n    const response = await fetch(`https://viacep.com.br/ws/${cep}/json/`)\n    const json = await response.json()\n    setAddress({\n      rua: json.logradouro,\n      cidade: json.localidade,\n      bairro: json.bairro,\n      uf: json.uf,\n      cep: json.cep,\n    })\n  }\n\n  // wait for the CEP to be filled in with 8 digits to make the request\n  React.useEffect(() => {\n    if (cep.length >= 8) {\n      getCep(cep)\n    }\n  }, [cep])\n\n  // watch the cart changes to calculate the total price.\n  React.useEffect(() => {\n    if (cart.length > 0) {\n      const prices = cart.map((item) => item.currentPrice)\n      setTotal(prices.reduce((a, b) => a + b))\n    }\n  }, [cart])\n\n  // save the address in localStorage after finalizing the order\n  React.useEffect(() => {\n    if (typeBuy === 'delivery') {\n      window.localStorage.setItem('address', JSON.stringify(order.address))\n    }\n  }, [order])\n\n  React.useEffect(() => {\n    setListProducts(data)\n  }, [data])\n\n  // loads product list and default localStorage address\n  React.useEffect(() => {\n    async function loadData() {\n      const response = await fetch(\n        'https://my-json-server.typicode.com/danielmafra/api/Bebidas'\n      )\n      const json = await response.json()\n      setData(json)\n    }\n    loadData()\n    const addressDefault = window.localStorage.getItem('address')\n    if (\n      addressDefault !== '' &&\n      addressDefault !== null &&\n      addressDefault !== undefined\n    ) {\n      setUser(JSON.parse(addressDefault))\n    } else {\n      setUser(null)\n    }\n  }, [])\n\n  function getCollection1(querySnapshot) {\n    const array = []\n    querySnapshot.forEach((res) => {\n      console.log(res.data())\n      // array.push({\n      //   doc: res.id,\n      //   id,\n      //   title,\n      //   price,\n      //   description,\n      //   img,\n      //   offer,\n      // })\n      // const novo = array.map((item) => ({\n      //   id: item.id,\n      //   title: item.title,\n      //   img: item.img,\n      //   price: item.price,\n      //   description: item.description,\n      //   offer: item.offer,\n      // }))\n      // setData(novo)\n    })\n  }\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        getProducts,\n        listProducts,\n        addCart,\n        cart,\n        total,\n        incrementItem,\n        decrementItem,\n        user,\n        setUser,\n        typeBuy,\n        setTypeBuy,\n        cep,\n        setCep,\n        number,\n        setNumber,\n        complement,\n        setComplement,\n        typePayment,\n        setTypePayment,\n        address,\n        setAddress,\n        order,\n        setOrder,\n        openCart,\n        setOpenCart,\n        openObs,\n        setOpenObs,\n        idObs,\n        setIdObs,\n        obs,\n        setObs,\n        addObs,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}