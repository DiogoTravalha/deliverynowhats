{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cardapio2021\\\\src\\\\GlobalContext.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GlobalContext = /*#__PURE__*/React.createContext();\nexport const GlobalStorage = ({\n  children\n}) => {\n  _s();\n\n  const [data, setData] = React.useState([]);\n  const [listProducts, setListProducts] = React.useState([]);\n  const [openCart, setOpenCart] = React.useState(false);\n  const [openObs, setOpenObs] = React.useState(false);\n  const [obs, setObs] = React.useState(null);\n  const [idObs, setIdObs] = React.useState(null);\n  const [cart, setCart] = React.useState([]);\n  const [total, setTotal] = React.useState(0);\n  const [user, setUser] = React.useState(null);\n  const [typeBuy, setTypeBuy] = React.useState('');\n  const [cep, setCep] = React.useState('');\n  const [number, setNumber] = React.useState('');\n  const [complement, setComplement] = React.useState('');\n  const [typePayment, setTypePayment] = React.useState('');\n  const [address, setAddress] = React.useState(null);\n  const [order, setOrder] = React.useState('');\n\n  function addCart(item) {\n    item.quantity = 1;\n    item.currentPrice = item.price;\n    item.isSelected = true;\n    setCart(oldArray => [...oldArray, item]);\n  } // add note to cart item\n\n\n  function addObs(id) {\n    let indexItem = cart.map(e => e.id).indexOf(id);\n    let updatedCart = [...cart];\n    updatedCart[indexItem].obs = obs;\n    setCart(updatedCart);\n  }\n\n  function incrementItem(item) {\n    let indexItem = cart.map(e => e.id).indexOf(item.id);\n    let updatedCart = [...cart];\n    updatedCart[indexItem].quantity = updatedCart[indexItem].quantity + 1;\n    updatedCart[indexItem].currentPrice = updatedCart[indexItem].currentPrice + updatedCart[indexItem].price;\n    setCart(updatedCart);\n  }\n\n  function decrementItem(item) {\n    let indexItem = cart.map(e => e.id).indexOf(item.id);\n    let updatedCart = [...cart];\n    updatedCart[indexItem].quantity = updatedCart[indexItem].quantity - 1;\n    updatedCart[indexItem].currentPrice = updatedCart[indexItem].currentPrice - updatedCart[indexItem].price;\n\n    if (updatedCart[indexItem].quantity === 0) {\n      updatedCart[indexItem].isSelected = false;\n      updatedCart.splice(indexItem, 1);\n      setCart(updatedCart);\n    }\n\n    setCart(updatedCart);\n  }\n\n  const getProducts = async category => {\n    const response = await fetch(`https://my-json-server.typicode.com/danielmafra/api/${category}`);\n    const json = await response.json();\n    setData(json);\n  };\n\n  async function getCep(cep) {\n    const response = await fetch(`https://viacep.com.br/ws/${cep}/json/`);\n    const json = await response.json();\n    setAddress({\n      rua: json.logradouro,\n      cidade: json.localidade,\n      bairro: json.bairro,\n      uf: json.uf,\n      cep: json.cep\n    });\n  } // wait for the CEP to be filled in with 8 digits to make the request\n\n\n  React.useEffect(() => {\n    if (cep.length >= 8) {\n      getCep(cep);\n    }\n  }, [cep]); // watch the cart changes to calculate the total price.\n\n  React.useEffect(() => {\n    if (cart.length > 0) {\n      const prices = cart.map(item => item.currentPrice);\n      setTotal(prices.reduce((a, b) => a + b));\n    }\n  }, [cart]); // save the address in localStorage after finalizing the order\n\n  React.useEffect(() => {\n    if (typeBuy === 'delivery') {\n      window.localStorage.setItem('address', JSON.stringify(order.address));\n    }\n  }, [order]);\n  React.useEffect(() => {\n    setListProducts(data);\n  }, [data]); // loads product list and default localStorage address\n\n  React.useEffect(() => {\n    async function loadData() {\n      const response = await fetch('https://my-json-server.typicode.com/danielmafra/api/burguers');\n      const json = await response.json();\n      setData(json);\n    }\n\n    loadData();\n    const addressDefault = window.localStorage.getItem('address');\n\n    if (addressDefault !== '' && addressDefault !== null && addressDefault !== undefined) {\n      setUser(JSON.parse(addressDefault));\n    } else {\n      setUser(null);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      getProducts,\n      listProducts,\n      addCart,\n      cart,\n      total,\n      incrementItem,\n      decrementItem,\n      user,\n      setUser,\n      typeBuy,\n      setTypeBuy,\n      cep,\n      setCep,\n      number,\n      setNumber,\n      complement,\n      setComplement,\n      typePayment,\n      setTypePayment,\n      address,\n      setAddress,\n      order,\n      setOrder,\n      openCart,\n      setOpenCart,\n      openObs,\n      setOpenObs,\n      idObs,\n      setIdObs,\n      obs,\n      setObs,\n      addObs\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GlobalStorage, \"XqntDUtvCCUAFqtYvjl4FZ/yS+8=\");\n\n_c = GlobalStorage;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalStorage\");","map":{"version":3,"sources":["D:/Cardapio2021/src/GlobalContext.js"],"names":["React","GlobalContext","createContext","GlobalStorage","children","data","setData","useState","listProducts","setListProducts","openCart","setOpenCart","openObs","setOpenObs","obs","setObs","idObs","setIdObs","cart","setCart","total","setTotal","user","setUser","typeBuy","setTypeBuy","cep","setCep","number","setNumber","complement","setComplement","typePayment","setTypePayment","address","setAddress","order","setOrder","addCart","item","quantity","currentPrice","price","isSelected","oldArray","addObs","id","indexItem","map","e","indexOf","updatedCart","incrementItem","decrementItem","splice","getProducts","category","response","fetch","json","getCep","rua","logradouro","cidade","localidade","bairro","uf","useEffect","length","prices","reduce","a","b","window","localStorage","setItem","JSON","stringify","loadData","addressDefault","getItem","undefined","parse"],"mappings":"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","sourcesContent":["import React from 'react';\n\nexport const GlobalContext = React.createContext();\n\nexport const GlobalStorage = ({ children }) => {\n  const [data, setData] = React.useState([]);\n  const [listProducts, setListProducts] = React.useState([]);\n  const [openCart, setOpenCart] = React.useState(false);\n  const [openObs, setOpenObs] = React.useState(false);\n  const [obs, setObs] = React.useState(null);\n  const [idObs, setIdObs] = React.useState(null);\n  const [cart, setCart] = React.useState([]);\n  const [total, setTotal] = React.useState(0);\n  const [user, setUser] = React.useState(null);\n  const [typeBuy, setTypeBuy] = React.useState('');\n  const [cep, setCep] = React.useState('');\n  const [number, setNumber] = React.useState('');\n  const [complement, setComplement] = React.useState('');\n  const [typePayment, setTypePayment] = React.useState('');\n  const [address, setAddress] = React.useState(null);\n  const [order, setOrder] = React.useState('');\n\n  function addCart(item) {\n    item.quantity = 1;\n    item.currentPrice = item.price;\n    item.isSelected = true;\n    setCart(oldArray => [...oldArray, item]);\n  }\n\n  // add note to cart item\n  function addObs(id) {\n    let indexItem = cart.map((e) => e.id).indexOf(id);\n    let updatedCart = [...cart];\n    updatedCart[indexItem].obs = obs;\n    setCart(updatedCart);\n  }\n\n  function incrementItem(item) {\n    let indexItem = cart.map((e) => e.id).indexOf(item.id);\n    let updatedCart = [...cart];\n    updatedCart[indexItem].quantity = updatedCart[indexItem].quantity + 1;\n    updatedCart[indexItem].currentPrice = updatedCart[indexItem].currentPrice + updatedCart[indexItem].price;\n    setCart(updatedCart);\n  }\n\n  function decrementItem(item) {\n    let indexItem = cart.map((e) => e.id).indexOf(item.id);\n    let updatedCart = [...cart];\n    updatedCart[indexItem].quantity = updatedCart[indexItem].quantity - 1;\n    updatedCart[indexItem].currentPrice = updatedCart[indexItem].currentPrice - updatedCart[indexItem].price;\n    if (updatedCart[indexItem].quantity === 0) {\n      updatedCart[indexItem].isSelected = false;\n      updatedCart.splice(indexItem, 1);\n      setCart(updatedCart);\n    }\n    setCart(updatedCart);\n  }\n\n  const getProducts = async (category) => {\n    const response = await fetch(`https://my-json-server.typicode.com/danielmafra/api/${category}`);\n    const json = await response.json();\n    setData(json);\n  }\n\n  async function getCep(cep) {\n    const response = await fetch(`https://viacep.com.br/ws/${cep}/json/`);\n    const json = await response.json();\n    setAddress({\n      rua: json.logradouro,\n      cidade: json.localidade,\n      bairro: json.bairro,\n      uf: json.uf,\n      cep: json.cep\n    });\n  }\n\n  // wait for the CEP to be filled in with 8 digits to make the request\n  React.useEffect(() => {\n    if (cep.length >= 8) {\n      getCep(cep);\n    }\n  }, [cep])\n\n  // watch the cart changes to calculate the total price.\n  React.useEffect(() => {\n    if (cart.length > 0) {\n      const prices = cart.map((item) => item.currentPrice);\n      setTotal(prices.reduce((a, b) => a + b));\n    }\n  }, [cart]);\n\n  // save the address in localStorage after finalizing the order\n  React.useEffect(() => {\n    if (typeBuy === 'delivery') {\n      window.localStorage.setItem('address', JSON.stringify(order.address));\n    }\n  }, [order]);\n\n  React.useEffect(() => {\n    setListProducts(data);\n  }, [data]);\n\n  // loads product list and default localStorage address\n  React.useEffect(() => {\n    async function loadData() {\n      const response = await fetch('https://my-json-server.typicode.com/danielmafra/api/burguers');\n      const json = await response.json();\n      setData(json);\n    }\n    loadData();\n    const addressDefault = window.localStorage.getItem('address');\n    if (addressDefault !== '' && addressDefault !== null && addressDefault !== undefined) {\n      setUser(JSON.parse(addressDefault));\n    } else {\n      setUser(null);\n    }\n  }, []);\n\n  return (\n    <GlobalContext.Provider value={{ getProducts, listProducts, addCart, cart, total, incrementItem, decrementItem, user, setUser, typeBuy, setTypeBuy, cep, setCep, number, setNumber, complement, setComplement, typePayment, setTypePayment, address, setAddress, order, setOrder, openCart, setOpenCart, openObs, setOpenObs, idObs, setIdObs, obs, setObs, addObs }}>\n      {children}\n    </GlobalContext.Provider>\n  );\n};"]},"metadata":{},"sourceType":"module"}