{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Diogo Eduardo\\\\Desktop\\\\deliverynowhats\\\\src\\\\GlobalContext.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport firebase from './Components/Firebase/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GlobalContext = /*#__PURE__*/React.createContext();\nexport const GlobalStorage = ({\n  children\n}) => {\n  _s();\n\n  const [data, setData] = React.useState([]);\n  const [listProducts, setListProducts] = React.useState([]);\n  const [openCart, setOpenCart] = React.useState(false);\n  const [openObs, setOpenObs] = React.useState(false);\n  const [obs, setObs] = React.useState(null);\n  const [idObs, setIdObs] = React.useState(null);\n  const [cart, setCart] = React.useState([]);\n  const [total, setTotal] = React.useState(0);\n  const [user, setUser] = React.useState(null);\n  const [typeBuy, setTypeBuy] = React.useState('');\n  const [cep, setCep] = React.useState('');\n  const [number, setNumber] = React.useState('');\n  const [complement, setComplement] = React.useState('');\n  const [typePayment, setTypePayment] = React.useState('');\n  const [address, setAddress] = React.useState(null);\n  const [order, setOrder] = React.useState('');\n  const [categoria, setCategoria] = React.useState([]);\n  const [idNum, setIdNum] = React.useState(0);\n  const [empresa, setEmpresa] = React.useState([]);\n  const [Loja, setLoja] = React.useState();\n\n  function addCart(item) {\n    item.id = idNum + 1;\n    item.quantity = 1;\n    item.currentPrice = item.price;\n    item.isSelected = true;\n    setCart(oldArray => [...oldArray, item]);\n  } // add note to cart item\n\n\n  function addObs(id) {\n    let indexItem = cart.map(e => e.id).indexOf(id);\n    let updatedCart = [...cart];\n    updatedCart[indexItem].obs = obs;\n    setCart(updatedCart);\n  }\n\n  function incrementItem(item) {\n    let indexItem = cart.map(e => e.id).indexOf(item.id);\n    let updatedCart = [...cart];\n    updatedCart[indexItem].quantity = updatedCart[indexItem].quantity + 1;\n    updatedCart[indexItem].currentPrice = updatedCart[indexItem].currentPrice + updatedCart[indexItem].price;\n    setCart(updatedCart);\n  }\n\n  function decrementItem(item) {\n    let indexItem = cart.map(e => e.id).indexOf(item.id);\n    let updatedCart = [...cart];\n    updatedCart[indexItem].quantity = updatedCart[indexItem].quantity - 1;\n    updatedCart[indexItem].currentPrice = updatedCart[indexItem].currentPrice - updatedCart[indexItem].price;\n\n    if (updatedCart[indexItem].quantity === 0) {\n      updatedCart[indexItem].isSelected = false;\n      updatedCart.splice(indexItem, 1);\n      setCart(updatedCart);\n    }\n\n    setCart(updatedCart);\n  }\n\n  const getProducts = async category => {\n    const firestoreRef = firebase.firestore().collection('Loja').doc(Loja).collection('Produtos').doc(category).collection('Itens');\n    const unsub = firestoreRef.onSnapshot(getCollection);\n    return () => {\n      unsub();\n    };\n  };\n\n  const getEmpresas = loja => {\n    firebase.firestore().collection('Loja').doc(loja).collection('Empresa').get().then(querySnapshot => {\n      const array = [];\n      querySnapshot.forEach(doc => {\n        const {\n          name,\n          cel,\n          img,\n          status\n        } = doc.data();\n        array.push({\n          id: doc.id,\n          name,\n          cel,\n          img,\n          status\n        });\n        const novo = array.map(item => ({\n          name: item.name,\n          cel: item.cel,\n          img: item.img,\n          status: item.status\n        }));\n        setEmpresa(novo);\n      });\n    });\n    firebase.firestore().collection('Loja').doc(loja).collection('Produtos').get().then(querySnapshot => {\n      const array = [];\n      querySnapshot.forEach(doc => {\n        array.push({\n          name: doc.id\n        });\n        const novo = array.map(item => ({\n          name: item.name\n        }));\n        setCategoria(novo);\n      });\n    });\n    setLoja(loja);\n    getProducts();\n  };\n\n  function getCollection(querySnapshot) {\n    const array = [];\n    querySnapshot.forEach(res => {\n      const {\n        title,\n        price,\n        img,\n        offer,\n        description,\n        id\n      } = res.data();\n      array.push({\n        doc: res.id,\n        id,\n        title,\n        price,\n        description,\n        img,\n        offer\n      });\n      const novo = array.map(item => ({\n        id: item.id,\n        title: item.title,\n        img: item.img,\n        price: item.price,\n        description: item.description,\n        offer: item.offer\n      }));\n      setData(novo);\n    });\n  }\n\n  async function getCep(cep) {\n    const response = await fetch(`https://viacep.com.br/ws/${cep}/json/`);\n    const json = await response.json();\n    setAddress({\n      rua: json.logradouro,\n      cidade: json.localidade,\n      bairro: json.bairro,\n      uf: json.uf,\n      cep: json.cep\n    });\n  } // wait for the CEP to be filled in with 8 digits to make the request\n\n\n  React.useEffect(() => {\n    if (cep.length >= 8) {\n      getCep(cep);\n    }\n  }, [cep]); // watch the cart changes to calculate the total price.\n\n  React.useEffect(() => {\n    if (cart.length > 0) {\n      const prices = cart.map(item => item.currentPrice);\n      setTotal(prices.reduce((a, b) => a + b));\n      const numero = cart.length;\n      setIdNum(numero + 1);\n    }\n  }, [cart]); // save the address in localStorage after finalizing the order\n\n  React.useEffect(() => {\n    if (typeBuy === 'delivery') {\n      window.localStorage.setItem('address', JSON.stringify(order.address));\n    }\n  }, [order]);\n  React.useEffect(() => {\n    setListProducts(data);\n  }, [data]); // loads product list and default localStorage address\n\n  React.useEffect(() => {\n    async function loadData() {// const response = await fetch(\n      //   'https://my-json-server.typicode.com/danielmafra/api/Bebidas'\n      // )\n      // const json = await response.json()\n      // setData(json)\n      // getEmpresas()\n    }\n\n    loadData();\n    const addressDefault = window.localStorage.getItem('address');\n\n    if (addressDefault !== '' && addressDefault !== null && addressDefault !== undefined) {\n      setUser(JSON.parse(addressDefault));\n    } else {\n      setUser(null);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      getProducts,\n      listProducts,\n      categoria,\n      addCart,\n      cart,\n      total,\n      incrementItem,\n      decrementItem,\n      user,\n      setUser,\n      typeBuy,\n      setTypeBuy,\n      cep,\n      setCep,\n      number,\n      setNumber,\n      complement,\n      setComplement,\n      typePayment,\n      setTypePayment,\n      address,\n      setAddress,\n      order,\n      setOrder,\n      openCart,\n      setOpenCart,\n      openObs,\n      setOpenObs,\n      idObs,\n      setIdObs,\n      obs,\n      setObs,\n      addObs,\n      empresa,\n      getEmpresas\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GlobalStorage, \"zYBxjLquUANZkwtk/cb6/Udekg4=\");\n\n_c = GlobalStorage;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalStorage\");","map":{"version":3,"sources":["C:/Users/Diogo Eduardo/Desktop/deliverynowhats/src/GlobalContext.js"],"names":["React","useParams","firebase","GlobalContext","createContext","GlobalStorage","children","data","setData","useState","listProducts","setListProducts","openCart","setOpenCart","openObs","setOpenObs","obs","setObs","idObs","setIdObs","cart","setCart","total","setTotal","user","setUser","typeBuy","setTypeBuy","cep","setCep","number","setNumber","complement","setComplement","typePayment","setTypePayment","address","setAddress","order","setOrder","categoria","setCategoria","idNum","setIdNum","empresa","setEmpresa","Loja","setLoja","addCart","item","id","quantity","currentPrice","price","isSelected","oldArray","addObs","indexItem","map","e","indexOf","updatedCart","incrementItem","decrementItem","splice","getProducts","category","firestoreRef","firestore","collection","doc","unsub","onSnapshot","getCollection","getEmpresas","loja","get","then","querySnapshot","array","forEach","name","cel","img","status","push","novo","res","title","offer","description","getCep","response","fetch","json","rua","logradouro","cidade","localidade","bairro","uf","useEffect","length","prices","reduce","a","b","numero","window","localStorage","setItem","JSON","stringify","loadData","addressDefault","getItem","undefined","parse"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport firebase from './Components/Firebase/firebase'\nexport const GlobalContext = React.createContext()\n\nexport const GlobalStorage = ({ children }) => {\n  const [data, setData] = React.useState([])\n  const [listProducts, setListProducts] = React.useState([])\n  const [openCart, setOpenCart] = React.useState(false)\n  const [openObs, setOpenObs] = React.useState(false)\n  const [obs, setObs] = React.useState(null)\n  const [idObs, setIdObs] = React.useState(null)\n  const [cart, setCart] = React.useState([])\n  const [total, setTotal] = React.useState(0)\n  const [user, setUser] = React.useState(null)\n  const [typeBuy, setTypeBuy] = React.useState('')\n  const [cep, setCep] = React.useState('')\n  const [number, setNumber] = React.useState('')\n  const [complement, setComplement] = React.useState('')\n  const [typePayment, setTypePayment] = React.useState('')\n  const [address, setAddress] = React.useState(null)\n  const [order, setOrder] = React.useState('')\n  const [categoria, setCategoria] = React.useState([])\n  const [idNum, setIdNum] = React.useState(0)\n  const [empresa, setEmpresa] = React.useState([])\n  const [Loja, setLoja] = React.useState()\n\n  function addCart(item) {\n    item.id = idNum + 1\n    item.quantity = 1\n    item.currentPrice = item.price\n    item.isSelected = true\n    setCart((oldArray) => [...oldArray, item])\n  }\n\n  // add note to cart item\n  function addObs(id) {\n    let indexItem = cart.map((e) => e.id).indexOf(id)\n    let updatedCart = [...cart]\n    updatedCart[indexItem].obs = obs\n    setCart(updatedCart)\n  }\n\n  function incrementItem(item) {\n    let indexItem = cart.map((e) => e.id).indexOf(item.id)\n    let updatedCart = [...cart]\n    updatedCart[indexItem].quantity = updatedCart[indexItem].quantity + 1\n    updatedCart[indexItem].currentPrice =\n      updatedCart[indexItem].currentPrice + updatedCart[indexItem].price\n    setCart(updatedCart)\n  }\n\n  function decrementItem(item) {\n    let indexItem = cart.map((e) => e.id).indexOf(item.id)\n    let updatedCart = [...cart]\n    updatedCart[indexItem].quantity = updatedCart[indexItem].quantity - 1\n    updatedCart[indexItem].currentPrice =\n      updatedCart[indexItem].currentPrice - updatedCart[indexItem].price\n    if (updatedCart[indexItem].quantity === 0) {\n      updatedCart[indexItem].isSelected = false\n      updatedCart.splice(indexItem, 1)\n      setCart(updatedCart)\n    }\n    setCart(updatedCart)\n  }\n\n  const getProducts = async (category) => {\n    const firestoreRef = firebase\n      .firestore()\n      .collection('Loja')\n      .doc(Loja)\n      .collection('Produtos')\n      .doc(category)\n      .collection('Itens')\n    const unsub = firestoreRef.onSnapshot(getCollection)\n    return () => {\n      unsub()\n    }\n  }\n\n  const getEmpresas = (loja) => {\n    firebase\n      .firestore()\n      .collection('Loja')\n      .doc(loja)\n      .collection('Empresa')\n      .get()\n      .then((querySnapshot) => {\n        const array = []\n        querySnapshot.forEach((doc) => {\n          const { name, cel, img, status } = doc.data()\n          array.push({\n            id: doc.id,\n            name,\n            cel,\n            img,\n            status,\n          })\n          const novo = array.map((item) => ({\n            name: item.name,\n            cel: item.cel,\n            img: item.img,\n            status: item.status,\n          }))\n          setEmpresa(novo)\n        })\n      })\n\n    firebase\n      .firestore()\n      .collection('Loja')\n      .doc(loja)\n      .collection('Produtos')\n      .get()\n      .then((querySnapshot) => {\n        const array = []\n        querySnapshot.forEach((doc) => {\n          array.push({\n            name: doc.id,\n          })\n          const novo = array.map((item) => ({\n            name: item.name,\n          }))\n          setCategoria(novo)\n        })\n      })\n    setLoja(loja)\n    getProducts()\n  }\n\n  function getCollection(querySnapshot) {\n    const array = []\n    querySnapshot.forEach((res) => {\n      const { title, price, img, offer, description, id } = res.data()\n      array.push({\n        doc: res.id,\n        id,\n        title,\n        price,\n        description,\n        img,\n        offer,\n      })\n      const novo = array.map((item) => ({\n        id: item.id,\n        title: item.title,\n        img: item.img,\n        price: item.price,\n        description: item.description,\n        offer: item.offer,\n      }))\n      setData(novo)\n    })\n  }\n\n  async function getCep(cep) {\n    const response = await fetch(`https://viacep.com.br/ws/${cep}/json/`)\n    const json = await response.json()\n    setAddress({\n      rua: json.logradouro,\n      cidade: json.localidade,\n      bairro: json.bairro,\n      uf: json.uf,\n      cep: json.cep,\n    })\n  }\n\n  // wait for the CEP to be filled in with 8 digits to make the request\n  React.useEffect(() => {\n    if (cep.length >= 8) {\n      getCep(cep)\n    }\n  }, [cep])\n\n  // watch the cart changes to calculate the total price.\n  React.useEffect(() => {\n    if (cart.length > 0) {\n      const prices = cart.map((item) => item.currentPrice)\n      setTotal(prices.reduce((a, b) => a + b))\n      const numero = cart.length\n      setIdNum(numero + 1)\n    }\n  }, [cart])\n\n  // save the address in localStorage after finalizing the order\n  React.useEffect(() => {\n    if (typeBuy === 'delivery') {\n      window.localStorage.setItem('address', JSON.stringify(order.address))\n    }\n  }, [order])\n\n  React.useEffect(() => {\n    setListProducts(data)\n  }, [data])\n\n  // loads product list and default localStorage address\n  React.useEffect(() => {\n    async function loadData() {\n      // const response = await fetch(\n      //   'https://my-json-server.typicode.com/danielmafra/api/Bebidas'\n      // )\n      // const json = await response.json()\n      // setData(json)\n      // getEmpresas()\n    }\n    loadData()\n    const addressDefault = window.localStorage.getItem('address')\n    if (\n      addressDefault !== '' &&\n      addressDefault !== null &&\n      addressDefault !== undefined\n    ) {\n      setUser(JSON.parse(addressDefault))\n    } else {\n      setUser(null)\n    }\n  }, [])\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        getProducts,\n        listProducts,\n        categoria,\n        addCart,\n        cart,\n        total,\n        incrementItem,\n        decrementItem,\n        user,\n        setUser,\n        typeBuy,\n        setTypeBuy,\n        cep,\n        setCep,\n        number,\n        setNumber,\n        complement,\n        setComplement,\n        typePayment,\n        setTypePayment,\n        address,\n        setAddress,\n        order,\n        setOrder,\n        openCart,\n        setOpenCart,\n        openObs,\n        setOpenObs,\n        idObs,\n        setIdObs,\n        obs,\n        setObs,\n        addObs,\n        empresa,\n        getEmpresas,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}